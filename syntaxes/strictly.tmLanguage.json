{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "strictly",
	"patterns": [
		{
			"include": "#data-keyword"
		},
		{
			"include": "#type-keyword"
		},
		{
			"include": "#root-assignment"
		},
		{
			"include": "#statement"
		},
		{
			"include": "#invalid"
		}
	],
	"repository": {
		"data-keyword": {
			"patterns": [
				{
					"begin": "^(data\\s+)(\\p{Uppercase_Letter}(\\p{Letter}|')*)\\s*=",
					"beginCaptures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					},
					"patterns": [
						{
							"begin": "(\\p{Uppercase_Letter}(\\p{Letter}|')*)\\(",
							"beginCaptures": {
								"1": {
									"name": "storage.type.class"
								}
							},
							"patterns": [
								{
									"include": "#type"
								},
								{
									"include": "#invalid"
								}
							],
							"end": "\\)"
						},
						{
							"match": "(\\p{Uppercase_Letter}(\\p{Letter}|')*)",
							"name": "storage.type.class"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "(;|^(?=\\S))"
				},
				{
					"match": "^(data\\s+|data$)(\\p{Uppercase_Letter}(\\p{Letter}|')*)?",
					"captures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				}
			]
		},
		"type-keyword": {
			"patterns": [
				{
					"begin": "^(type\\s+)(\\p{Uppercase_Letter}(\\p{Letter}|')*)\\s*=",
					"beginCaptures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					},
					"patterns": [
						{
							"include": "#type"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "(;|^(?=\\S))"
				},
				{
					"match": "^(type\\s+|type$)(\\p{Uppercase_Letter}(\\p{Letter}|')*)?",
					"captures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "entity.name.type"
						}
					}
				}
			]
		},
		"type": {
			"patterns": [
				{
					"begin": "{",
					"patterns": [
						{
							"match": "(\\p{Lowercase_Letter}(\\p{Letter})*)",
							"name": "support.type.property-name"
						},
						{
							"include": "#type"
						},
						{
							"match": ":"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "(}|(?=;))"
				},
				{
					"begin": "(\\\\)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function"
						}
					},
					"patterns": [
						{
							"include": "#type"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "(->)|$",
					"endCaptures": {
						"1": {
							"name": "entity.name.function"
						}
					}
				},
				{
					"match": "(\\[|\\])"
				},
				{
					"match": "\\p{Uppercase_Letter}(\\p{Letter}|')*",
					"name": "entity.name.type"
				}
			]
		},
		"root-assignment": {
			"patterns": [
				{
					"begin": "^(\\p{Lowercase_Letter}(\\p{Letter}|')*)\\s*:",
					"captures": {
						"1": {
							"name": "variable.other.constant"
						}
					},
					"patterns": [
						{
							"include": "#type"
						},
						{
							"include": "#invalid"
						}
					],
					"end": "$"
				},
				{
					"begin": "^(\\p{Lowercase_Letter}(\\p{Letter}|')*)\\s*=",
					"captures": {
						"1": {
							"name": "variable.other.constant"
						}
					},
					"patterns": [
						{
							"include": "#statement"
						},
						{
							"include": "#invalid"
						}
					],
					"end": "$"
				},
				{
					"match": "^(\\p{Lowercase_Letter}(\\p{Letter}|')*)",
					"name": "variable.other.constant"
				}
			]
		},
		"statement": {
			"patterns": [
				{
					"include": "#assignment"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#record"
				},
				{
					"include": "#list"
				},
				{
					"include": "#function-definition"
				},
				{
					"include": "#string"
				},
				{
					"include": "#algebraic-data-type"
				},
				{
					"include": "#host-element"
				},
				{
					"match": ";"
				}
			],
			"repository": {
				"assignment": {
					"begin": "(let\\s+)",
					"beginCaptures": {
						"1": {
							"name": "storage.type"
						}
					},
					"patterns": [
						{
							"include": "#leftHandSide"
						},
						{
							"include": "#invalid"
						}
					],
					"end": "(=|(<-)|\\|)",
					"endCaptures": {
						"2": {
							"name": "entity.name.function"
						}
					}
				},
				"function-call": {
					"begin": "(\\p{Lowercase_Letter}(\\p{Letter}|')*)\\(",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function"
						}
					},
					"patterns": [
						{
							"include": "#statement"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "\\)"
				},
				"variable": {
					"match": "\\p{Lowercase_Letter}(\\p{Letter}|')*",
					"name": "variable.other.constant"
				},
				"record": {
					"begin": "{",
					"patterns": [
						{
							"begin": "(\\p{Lowercase_Letter}(\\p{Letter})*)\\s*:",
							"captures": {
								"1": {
									"name": "support.type.property-name"
								}
							},
							"patterns": [
								{
									"include": "#type"
								},
								{
									"include": "#invalid"
								}
							],
							"end": "((?=,|}|\\|)|$)"
						},
						{
							"begin": "(\\p{Lowercase_Letter}(\\p{Letter})*)\\s*=",
							"captures": {
								"1": {
									"name": "support.type.property-name"
								}
							},
							"patterns": [
								{
									"include": "#statement"
								},
								{
									"include": "#invalid"
								}
							],
							"end": "((?=,|}|\\|)|$)"
						},
						{
							"match": "(\\p{Lowercase_Letter}(\\p{Letter})*)",
							"name": "support.type.property-name"
						},
						{
							"include": "#statement"
						},
						{
							"match": "\\|"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "}"
				},
				"list": {
					"begin": "\\[",
					"patterns": [
						{
							"include": "#statement"
						},
						{
							"match": "\\|"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "\\]"
				},
				"function-definition": {
					"begin": "(\\\\)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function"
						}
					},
					"patterns": [
						{
							"include": "#leftHandSide"
						},
						{
							"match": ","
						},
						{
							"include": "#invalid"
						}
					],
					"end": "(->)|$",
					"endCaptures": {
						"1": {
							"name": "entity.name.function"
						}
					}
				},
				"string": {
					"begin": "(\")",
					"beginCaptures": {
						"1": {
							"name": "string.quoted.double"
						}
					},
					"end": "(\")",
					"endCaptures": {
						"1": {
							"name": "string.quoted.double"
						}
					},
					"patterns": [
						{
							"begin": "(\\${)",
							"beginCaptures": {
								"1": {
									"name": "punctuation.definition.template-statement.begin"
								}
							},
							"end": "(})",
							"endCaptures": {
								"1": {
									"name": "punctuation.definition.template-statement.end"
								}
							},
							"patterns": [
								{
									"include": "#statement"
								},
								{
									"include": "#invalid"
								}
							]
						},
						{
							"name": "string.quoted.double",
							"match": "."
						}
					]
				},
				"algebraic-data-type": {
					"patterns": [
						{
							"include": "#algebraic-data-type-with-parameters"
						},
						{
							"include": "#algebraic-data-type-without-parameters"
						}
					],
					"repository": {
						"algebraic-data-type-with-parameters": {
							"begin": "(\\p{Uppercase_Letter}(\\p{Letter}|')*)\\(",
							"beginCaptures": {
								"1": {
									"name": "storage.type.class"
								}
							},
							"patterns": [
								{
									"include": "#statement"
								},
								{
									"match": ","
								},
								{
									"include": "#invalid"
								}
							],
							"end": "\\)"
						},
						"algebraic-data-type-without-parameters": {
							"match": "(\\p{Uppercase_Letter}(\\p{Letter}|')*)",
							"name": {
								"1": {
									"name": "storage.type.class"
								}
							}
						}
					}
				},
				"host-element": {
					"patterns": [
						{
							"include": "#component"
						},
						{
							"include": "#host"
						}
					],
					"repository": {
						"host": {
							"name": "entity.name.tag.js.jsx",
							"match": "\\$((\\p{Ll})+:)?(\\p{Ll})+"
						},
						"component": {
							"name": "support.class.component.js.jsx",
							"match": "\\$(\\p{Ll}|\\.)+(\\p{Pd}(\\p{Ll})+)+"
						}
					}
				}
			}
		},
		"leftHandSide": {
			"patterns": []
		},
		"invalid": {
			"match": ".",
			"name": "invalid.illegal"
		}
	},
	"scopeName": "source.strictly"
}